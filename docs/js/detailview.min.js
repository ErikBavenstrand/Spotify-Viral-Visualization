/*! viral-50 v0.0.1 | (c) 2020 Erik BÃ¥venstrand | MIT License | https://github.com/ErikBavenstrand/DH2321-Spotify-Project */
function addCountryToDetailView(e){addCountryToWeeklySongs(e),addCountryToLineChart(e)}function removeCountryFromDetailView(e){removeCountryFromWeeklySongs(e),removeCountryFromLineChart(e)}function changeWeekDetailView(){selectedCountries.forEach((function(e){changeWeeklySongsWeek(e)})),isInDetailView&&updateLineChartWeek()}function addCountryToWeeklySongs(e){var s=d3.select("#weekly-songs-list");s.append("li").attr("id","weekly-songs-"+e).append("div").attr("id","weekly-songs-div-"+e).data([e]).text((function(){return countryCCJSON[e]})).on("click",(function(e){s.selectAll("div").classed("active",!1),d3.select(this).classed("active",!0),d3.selectAll(".weekly-song-list-wrapper").classed("weekly-song-list-wrapper-hidden",!0),d3.select("#weekly-song-tab-"+e).classed("weekly-song-list-wrapper-hidden",!1)})),d3.select("#weekly-songs-list-window").append("div").classed("weekly-song-list-wrapper",!0).classed("weekly-song-list-wrapper-hidden",!0).attr("id","weekly-song-tab-"+e).append("div").classed("weekly-song-list",!0).append("ol").attr("id","weekly-song-list-ul-"+e),1===s.selectAll("li").size()&&(d3.select("#weekly-songs-div-"+e).classed("active",!0),d3.select("#weekly-song-tab-"+e).classed("weekly-song-list-wrapper-hidden",!1)),changeWeeklySongsWeek(e)}function removeCountryFromWeeklySongs(e){var s=d3.select("#weekly-songs-list");d3.select("#weekly-songs-"+e).remove(),d3.select("#weekly-song-tab-"+e).remove(),selectedCountries.length>0&&!s.selectAll("div").classed("active")&&(s.select("div").classed("active",!0),d3.select("#weekly-songs-list-window").select("div").classed("weekly-song-list-wrapper-hidden",!1))}function changeWeeklySongsWeek(e){d3.select("#weekly-song-list-ul-"+e).selectAll("li").remove(),data_songs[dataWeek][e]&&(d3.select("#weekly-song-list-ul-"+e).selectAll("li").data(data_songs[dataWeek][e]).enter().append("li").append("div").classed("song-entry-wrapper",!0).append("div").classed("song-name",!0).text((function(e){return e["Track Name"]})),d3.select("#weekly-song-list-ul-"+e).selectAll(".song-entry-wrapper").data(data_songs[dataWeek][e]).append("div").classed("artist-name",!0).text((function(e){return e.Artist})))}