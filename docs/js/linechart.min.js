/*! viral-50 v0.0.1 | (c) 2020 Erik BÃ¥venstrand | MIT License | https://github.com/ErikBavenstrand/DH2321-Spotify-Project */
var sampleData=[],margin={top:50,right:10,bottom:20,left:60},totalWidth=.35*window.innerWidth,innerWidth=totalWidth-margin.left-margin.right,totalHeight=.3*window.innerHeight,innerHeight=totalHeight-margin.top-margin.bottom;toggleDetailViewVisibility();var container=d3.select("#linechart"),chart=d3.select("#linechart").append("svg").attr("width",totalWidth).attr("height",totalHeight).append("g").attr("transform","translate("+margin.left+","+margin.top+")"),xLength=29,xScale=d3.scaleLinear().domain([0,xLength]).range([0,innerWidth]),yScale=d3.scaleLinear().domain([0,1]).range([innerHeight,0]),line=d3.line().x((function(t,e){return xScale(t.x)})).y((function(t,e){return yScale(t.y)})).curve(d3.curveLinear),xAxis=chart.append("g").attr("class","x axis").attr("transform","translate(0,"+innerHeight+")").call(d3.axisBottom(xScale)),yAxis=chart.append("g").attr("class","y axis").call(d3.axisLeft(yScale)),lineMarker=chart.append("rect").attr("class","chart-marker").style("position","absolute").style("z-index","19").style("width","2px").style("height",innerHeight),lockedDataMarker=!1;d3.select("#details").on("mousemove",(function(){handleMouseMove(this)})).on("click",(function(){(lockedDataMarker=!lockedDataMarker)||handleMouseMove(this)}));var chartTooltip=container.append("div").attr("class","chart-tooltip").style("opacity",0).style("left",margin.left).style("top",totalHeight),prevX=0;function updateChartTooltip(t,e){var a=Math.round(xScale.invert(e)),n=xScale(a)+margin.left/2,r=innerHeight+yScale(sampleData[a].y)-margin.top-25,i="X: "+t.x+"<br> Y: "+t.y.toFixed(3);a!=prevX&&chartTooltip.interrupt(),chartTooltip.transition().duration(200).delay(100).ease(d3.easeCubic).style("opacity",.85).style("left",n+"px").style("top",r+"px"),chartTooltip.html(i),prevX=a}function hideChartTooltip(){}function reloadLineChart(t){sampleData=t,drawLine(t),addGridLines(),addDataPointDots(t)}function drawLine(t){chart.append("path").attr("class","line").attr("line-loaded",!0).data([t]).attr("d",line)}function addGridLines(){d3.selectAll(".y.axis > .tick").each((function(){var t=d3.create("svg:line").attr("class","y-gridline").attr("x1",0).attr("x2",innerWidth);this.append(t.node())}))}function addDataPointDots(t){chart.selectAll(".dot").data(t).enter().append("circle").attr("class","chart-dot").attr("opacity","0.5").attr("cx",(function(t){return xScale(t.x)})).attr("cy",(function(t){return yScale(t.y)})).attr("r",3)}function handleMouseMove(t){lockedDataMarker||(mousex=d3.mouse(t)[0]-margin.left,mousex=xScale(Math.round(xScale.invert(mousex))),mousex<0&&(mousex=0),mousex>innerWidth&&(mousex=innerWidth),lineMarker.attr("x",mousex+"px"),chart.selectAll(".chart-dot").classed("focus",(function(t){return t.x==Math.round(xScale.invert(mousex))})).classed("nonfocus",(function(t){return t.x!=Math.round(xScale.invert(mousex))})).each((function(t){t.x==Math.round(xScale.invert(mousex))&&updateChartTooltip(t,mousex)})))}Promise.all([d3.json("data/random_test_data.json")]).then((function(t){reloadLineChart(t[0].map((function(t,e){return{x:e,y:t}})))}));