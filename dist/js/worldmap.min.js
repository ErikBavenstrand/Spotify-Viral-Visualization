/*! viral-50 v0.0.1 | (c) 2020 Erik BÃ¥venstrand | MIT License | https://github.com/ErikBavenstrand/DH2321-Spotify-Project */
var world=d3.select("#world").append("svg"),g=world.append("g"),worldWidth=parseInt(world.style("width")),worldHeight=parseInt(world.style("height")),worldProjection=d3.geoMercator().rotate([-12,0,0]).center([0,0]).scale(worldHeight/1.3/Math.PI).translate([worldWidth/2,worldHeight/1.5]),worldGraticule=d3.geoGraticule(),worldPath=d3.geoPath().projection(worldProjection),zoom=d3.zoom().scaleExtent([1,7]).on("zoom",(function(){var t=d3.event.transform,e=worldWidth*(1-t.k),r=worldHeight*(1-t.k);t.x=Math.min(0,Math.max(e,t.x)),t.y=Math.min(0,Math.max(r,t.y)),g.selectAll("path").attr("transform",t)}));function generateWorldMap(t){g.selectAll("path").data(t.features,(function(t){return t})).enter().append("path").attr("d",worldPath).classed("defaultCountry",!0).each((function(t,e){d3.select(this).classed(t.id,!0)})).on("mouseover",(function(t,e){})).on("click",(function(t,e){d3.select(".cards").classed("flipped",!0)})).on("mouseout",(function(t,e){}))}function updateWorldMap(t,e,r){var o=Object.keys(t);d3.selectAll(".defaultCountry").classed("countryIsInCurrentData",!1).style("fill",null).filter((function(t){return o.indexOf(t.id)>-1})).classed("countryIsInCurrentData",!0).each((function(o){d3.select(this).style("fill",calculateColorFromValue(t[o.id][currentAttribute],e[currentAttribute],r[currentAttribute],minColor,maxColor))}))}world.call(zoom);